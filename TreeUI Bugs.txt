Add a scrolldown for file loading
add a scrolldown for object generation
Add small objects to object generation[done]
Create gas station example
Create scrollbar for panels[done]

TODO:
Sort classes by name
Reorder class buttons by name
OBJECT SPAWNING NEEDS TO BE BASED ON SAVED OBJECTS, NOT CONSTRUCTORS!!!
High Priority:
Be able to place where a loaded tree is.

Theory:
Use the incubator to send synchronization data for multiplayer

Server sends everything to client
Server will only update around the client location
Server will receive mouse clicks and process using incubator
Server will yield to client for the interaction and active object
Server will create an inventory manager for each player.
Server will mark which objects need updating based on if they were interacted with
Server will send a dtg packet to control simulation speed, dtg will be raw dtg and sent via udp

Need to generate a packet for each object
Use reflection to generate the packet
Avoid grabbing pointers for now

Client sends mouse clicks(Not coords, needs relative coords, just what was in the hand, what was clicked on)
Client sends vars of active object except pointers
Client sends vars of interaction object except pointers
Client will DISABLE object creation to avoid conflicts with server
Client will need to be able to create objects with set ids(Add functionality to incubator)
Client TreeUIManager will check thread if it should allow object creation or block
Client will REFUSE to update interaction and active object

ISSUE: When an object is picked up, need to have a process to remove it from the ground
SOLUTION: Mouse click will handle that, simulate mouse click, object is removed from ground. Keep track of players inventory

ISSUE: Creating objects in the editor needs to work for clients
[NON-ISSUE]: Saplings and Buds are synced, this is non issue(Mouse clicks will need to be relative to their targets)

ISSUE: UIElements are not actually stored in the tuim object list, they are stored within the panels
This means that distro needs to sync up panel data somehow
SOLUTION: Use inc lists instead, they have the complete object list

How to keep track of players inventory?
Socket manager will need to keep track of it
Use the incubator maybe?
Other player inventory will be tracked via hidden inventory panels
The server will create an inventory manager for each player

DONE
Change tuimultiplayer handler to tuimultipler instead of tuimanager[DONE]
	All packets should go through the tuimultiplayer handler before being forwarded to the tuimanager[DONE]

TEST
tuimultiplayer
	Don't set fields which don't exist[TEST]
	Add panel logic in sso in tuimultiplayer(don't update panels)[TEST]
	
Incubator
	Update object fields[TEST]
	Create and set object ids when creating new objects from packets[TEST]
	Incubator will keep a table of objects and their params which still need objects
	Serialize object will handle pointers by using incubator ids
TUIM
	Identify thread(???)(Just check the Tuimulti var!) and block object creation if it is the client(Only server can create objects)[TEST]

TODO:
InputManager
	Clicks for clients should send tcp packets with id of object clicked and id of object held
	Interactions should send udp sync packets for the server and tell the tuim to ignore sync packets for interacted objects
tuimultiplayer
	Add specialized panel creation for origin objects[TODO, Made panels public]
	Add nosync interface to identify objects which should be ignored by the server distro(panels go in this category)
	Objects which don't exist yet will be specifically requested by the client via tcp(this is how panels will be synced)
	UIElements don't show up because they are only drawn if they are part of the objectlist in the parent panel
	
TODO IMMEDIATELY:
	Refactor uielements to use screen implicitly[DONE]
	Refactor uielements to use parent's datanode implicitly[NEEDS TESTING]
	Refactor uielements to use implicit super constructor

